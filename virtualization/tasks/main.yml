#SPDX-License-Identifier: MIT-0
---
# tasks file for virtualization
- name: Install Frontend, Libvirt and Hyprvisor
  become: true
  pacman:
    name:
      - virt-manager # Frontend
      - virt-viewer
      - libvirt # Management
      - qemu-full # Hyprvisor
      - dnsmasq
      - vde2
      - bridge-utils
      - openbsd-netcat
      - libguestfs

- name: Home Folder
  file:
    state: directory
    path: "{{ homedir }}/VMs"
    owner: "{{ username }}"

- name: Libvirtd conf sock group
  become: true
  lineinfile:
    path: /etc/libvirt/libvirtd.conf
    line: unix_sock_group = "libvirt"
    insertafter: ^#unix_sock_group = "libvirt"$

- name: Libvirtd conf sock ro perms
  become: true
  lineinfile:
    path: /etc/libvirt/libvirtd.conf
    line: unix_sock_ro_perms = "0777"
    insertafter: ^#unix_sock_ro_perms = "0777"$

- name: Libvirtd conf sock rw perms
  become: true
  lineinfile:
    path: /etc/libvirt/libvirtd.conf
    line: unix_sock_rw_perms = "0770"
    insertafter: ^#unix_sock_rw_perms = "0770"$
    
- name: Add user to libvirt group
  become: true
  user:
    name: "{{ username }}"
    groups: libvirt
    append: true 

- name: Check for firwall (ufw)
  command:
    argv:
      - which
      - ufw
  changed_when: false
  register: ufw

- name: Allow all incomming from virbr0
  when: ufw is succeeded
  become: true
  community.general.ufw:
    interface_in: virbr0
    rule: allow

- name: Allow all outcomming from virbr0
  when: ufw is succeeded
  become: true
  community.general.ufw:
    interface_out: virbr0
    rule: allow

- name: Allow all routed incomming from virbr0
  when: ufw is succeeded
  become: true
  community.general.ufw:
    interface_in: virbr0
    route: true
    rule: allow

- name: Enable Libvirt
  become: true
  systemd:
    name: libvirtd
    state: started
    enabled: yes
